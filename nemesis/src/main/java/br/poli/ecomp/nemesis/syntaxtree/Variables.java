/*
 * Generated by classgen, version 1.3
 * 11/12/13 01:07
 */
package br.poli.ecomp.nemesis.syntaxtree;

public class Variables implements SyntaxNode {

  private SyntaxNode parent;
  private LVCom lvcom;

  public Variables (LVCom lvcom) {
    this.lvcom = lvcom;
    if (lvcom != null) lvcom.setParent(this);
  }

  public LVCom getLvcom() {
    return lvcom;
  }

  public void setLvcom(LVCom lvcom) {
    this.lvcom = lvcom;
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (lvcom != null) lvcom.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (lvcom != null) lvcom.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (lvcom != null) lvcom.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString() {
    return toString("");
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("Variables(\n");
      if (lvcom != null)
        buffer.append(lvcom.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [Variables]");
    return buffer.toString();
  }
}
