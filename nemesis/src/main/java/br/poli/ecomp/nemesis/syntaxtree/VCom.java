/*
 * Generated by classgen, version 1.3
 * 11/12/13 03:00
 */
package br.poli.ecomp.nemesis.syntaxtree;

public class VCom implements SyntaxNode {

  private SyntaxNode parent;
  private Declaration declaration;

  public VCom (Declaration declaration) {
    this.declaration = declaration;
    if (declaration != null) declaration.setParent(this);
  }

  public Declaration getDeclaration() {
    return declaration;
  }

  public void setDeclaration(Declaration declaration) {
    this.declaration = declaration;
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (declaration != null) declaration.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (declaration != null) declaration.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (declaration != null) declaration.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString() {
    return toString("");
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("VCom(\n");
      if (declaration != null)
        buffer.append(declaration.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [VCom]");
    return buffer.toString();
  }
}
