/*
 * Generated by classgen, version 1.3
 * 11/12/13 02:54
 */
package br.poli.ecomp.nemesis.syntaxtree;

public class LStatement implements SyntaxNode {

  private SyntaxNode parent;
  private Statement statement;
  private LStatement prox;

  public LStatement (Statement statement, LStatement prox) {
    this.statement = statement;
    if (statement != null) statement.setParent(this);
    this.prox = prox;
    if (prox != null) prox.setParent(this);
  }

  public Statement getStatement() {
    return statement;
  }

  public void setStatement(Statement statement) {
    this.statement = statement;
  }

  public LStatement getProx() {
    return prox;
  }

  public void setProx(LStatement prox) {
    this.prox = prox;
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (statement != null) statement.accept(visitor);
    if (prox != null) prox.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (statement != null) statement.traverseTopDown(visitor);
    if (prox != null) prox.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (statement != null) statement.traverseBottomUp(visitor);
    if (prox != null) prox.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString() {
    return toString("");
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("LStatement(\n");
      if (statement != null)
        buffer.append(statement.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (prox != null)
        buffer.append(prox.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [LStatement]");
    return buffer.toString();
  }
}
