/*
 * Generated by classgen, version 1.3
 * 11/12/13 01:44
 */
package br.poli.ecomp.nemesis.syntaxtree;

public class Settings implements SyntaxNode {

  private SyntaxNode parent;
  private LSCom lscom;

  public Settings (LSCom lscom) {
    this.lscom = lscom;
    if (lscom != null) lscom.setParent(this);
  }

  public LSCom getLscom() {
    return lscom;
  }

  public void setLscom(LSCom lscom) {
    this.lscom = lscom;
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (lscom != null) lscom.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (lscom != null) lscom.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (lscom != null) lscom.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString() {
    return toString("");
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("Settings(\n");
      if (lscom != null)
        buffer.append(lscom.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [Settings]");
    return buffer.toString();
  }
}
