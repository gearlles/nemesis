/*
 * Generated by classgen, version 1.3
 * 11/12/13 01:44
 */
package br.poli.ecomp.nemesis.syntaxtree;

public abstract class VisitorAdaptor implements Visitor {

  public void visit(Document document) { visit(); }
  public void visit(Header header) { visit(); }
  public void visit(LHCom lHCom) { visit(); }
  public void visit(Settings settings) { visit(); }
  public void visit(LSCom lSCom) { visit(); }
  public void visit(Variables variables) { visit(); }
  public void visit(LVCom lVCom) { visit(); }
  public void visit(VCom vCom) { visit(); }
  public void visit(Declaration declaration) { visit(); }
  public void visit(LNum lNum) { visit(); }
  public void visit(Body body) { visit(); }
  public void visit(LBCom lBCom) { visit(); }
  public void visit(LQuestion lQuestion) { visit(); }
  public void visit(LOptions lOptions) { visit(); }
  public void visit(LStatement lStatement) { visit(); }
  public void visit(Answer answer) { visit(); }
  public void visit(LContent lContent) { visit(); }
  public void visit(Option option) { visit(); }
  public void visit(Statement statement) { visit(); }
  public void visit(Footer footer) { visit(); }
  public void visit(Weight weight) { visit(); }
  public void visit(HCom hCom) { visit(); }
  public void visit(University university) { visit(); }
  public void visit(Campi campi) { visit(); }
  public void visit(Course course) { visit(); }
  public void visit(Subject subject) { visit(); }
  public void visit(Title title) { visit(); }
  public void visit(Professor professor) { visit(); }
  public void visit(LiteralDate literalDate) { visit(); }
  public void visit(VariableDate variableDate) { visit(); }
  public void visit(SCom sCom) { visit(); }
  public void visit(MaximumScore maximumScore) { visit(); }
  public void visit(RandomOrder randomOrder) { visit(); }
  public void visit(BCom bCom) { visit(); }
  public void visit(Group group) { visit(); }
  public void visit(Question question) { visit(); }
  public void visit(MultipleChoiceQuestion multipleChoiceQuestion) { visit(); }
  public void visit(FreeAnswerQuestion freeAnswerQuestion) { visit(); }
  public void visit(TrueFalseQuestion trueFalseQuestion) { visit(); }
  public void visit(Content content) { visit(); }
  public void visit(Math math) { visit(); }
  public void visit(Text text) { visit(); }
  public void visit(Variable variable) { visit(); }

  public void visit() { }

}
