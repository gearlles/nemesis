/*
 * Generated by classgen, version 1.3
 * 27/11/13 14:42
 */
package imperative_lang.syntaxtree;

public class Field extends Expr {

  private Expr struct;
  private String fieldName;

  public Field (Expr struct, String fieldName) {
    this.struct = struct;
    if (struct != null) struct.setParent(this);
    this.fieldName = fieldName;
  }

  public Expr getStruct() {
    return struct;
  }

  public void setStruct(Expr struct) {
    this.struct = struct;
  }

  public String getFieldName() {
    return fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = fieldName;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (struct != null) struct.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (struct != null) struct.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (struct != null) struct.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("Field(\n");
      if (struct != null)
        buffer.append(struct.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append("  "+tab+fieldName);
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [Field]");
    return buffer.toString();
  }
}
