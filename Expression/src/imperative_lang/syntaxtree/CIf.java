/*
 * Generated by classgen, version 1.3
 * 27/11/13 14:42
 */
package imperative_lang.syntaxtree;

public class CIf extends Com {

  private Expr test;
  private Com caseTrue;
  private Com caseFalse;

  public CIf (Expr test, Com caseTrue, Com caseFalse) {
    this.test = test;
    if (test != null) test.setParent(this);
    this.caseTrue = caseTrue;
    if (caseTrue != null) caseTrue.setParent(this);
    this.caseFalse = caseFalse;
    if (caseFalse != null) caseFalse.setParent(this);
  }

  public Expr getTest() {
    return test;
  }

  public void setTest(Expr test) {
    this.test = test;
  }

  public Com getCaseTrue() {
    return caseTrue;
  }

  public void setCaseTrue(Com caseTrue) {
    this.caseTrue = caseTrue;
  }

  public Com getCaseFalse() {
    return caseFalse;
  }

  public void setCaseFalse(Com caseFalse) {
    this.caseFalse = caseFalse;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (test != null) test.accept(visitor);
    if (caseTrue != null) caseTrue.accept(visitor);
    if (caseFalse != null) caseFalse.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (test != null) test.traverseTopDown(visitor);
    if (caseTrue != null) caseTrue.traverseTopDown(visitor);
    if (caseFalse != null) caseFalse.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (test != null) test.traverseBottomUp(visitor);
    if (caseTrue != null) caseTrue.traverseBottomUp(visitor);
    if (caseFalse != null) caseFalse.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("CIf(\n");
      if (test != null)
        buffer.append(test.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (caseTrue != null)
        buffer.append(caseTrue.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (caseFalse != null)
        buffer.append(caseFalse.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [CIf]");
    return buffer.toString();
  }
}
