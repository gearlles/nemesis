/*
 * Generated by classgen, version 1.3
 * 27/11/13 14:42
 */
package imperative_lang.syntaxtree;

public class CWhile extends Com {

  private Expr test;
  private Com rep;

  public CWhile (Expr test, Com rep) {
    this.test = test;
    if (test != null) test.setParent(this);
    this.rep = rep;
    if (rep != null) rep.setParent(this);
  }

  public Expr getTest() {
    return test;
  }

  public void setTest(Expr test) {
    this.test = test;
  }

  public Com getRep() {
    return rep;
  }

  public void setRep(Com rep) {
    this.rep = rep;
  }

  public void accept(Visitor visitor) {
    visitor.visit(this);
  }

  public void childrenAccept(Visitor visitor) {
    if (test != null) test.accept(visitor);
    if (rep != null) rep.accept(visitor);
  }

  public void traverseTopDown(Visitor visitor) {
    accept(visitor);
    if (test != null) test.traverseTopDown(visitor);
    if (rep != null) rep.traverseTopDown(visitor);
  }

  public void traverseBottomUp(Visitor visitor) {
    if (test != null) test.traverseBottomUp(visitor);
    if (rep != null) rep.traverseBottomUp(visitor);
    accept(visitor);
  }

  public String toString(String tab) {
    StringBuffer buffer = new StringBuffer();
    buffer.append(tab);
    buffer.append("CWhile(\n");
      if (test != null)
        buffer.append(test.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
      if (rep != null)
        buffer.append(rep.toString("  "+tab));
      else
        buffer.append(tab+"  null");
    buffer.append("\n");
    buffer.append(tab);
    buffer.append(") [CWhile]");
    return buffer.toString();
  }
}
