/*
 * Generated by classgen, version 1.3
 * 24/10/13 14:00
 */
package avaliador.syntaxtree;

public abstract class Expr implements SyntaxNode {

  private SyntaxNode parent;

  public float getVal() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setVal(float val) {
    throw new ClassCastException("tried to call abstract method");
  }

  public Expr getA() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setA(Expr a) {
    throw new ClassCastException("tried to call abstract method");
  }

  public Expr getB() {
    throw new ClassCastException("tried to call abstract method");
  }

  public void setB(Expr b) {
    throw new ClassCastException("tried to call abstract method");
  }

  public SyntaxNode getParent() {
    return parent;
  }

  public void setParent(SyntaxNode parent) {
    this.parent = parent;
  }

  public abstract void accept(Visitor visitor);
  public abstract void childrenAccept(Visitor visitor);
  public abstract void traverseTopDown(Visitor visitor);
  public abstract void traverseBottomUp(Visitor visitor);
  public String toString() {
    return toString("");
  }

  public abstract String toString(String tab);
}
